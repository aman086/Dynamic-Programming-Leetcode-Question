/*

This can be performed any number of times.

A good string is a string constructed by the above process having a length between low and high (inclusive).

Return the number of different good strings that can be constructed satisfying these properties. 
Since the answer can be large, return it modulo 109 + 7.


Input: low = 3, high = 3, zero = 1, one = 1
Output: 8
Explanation: 
One possible valid good string is "011". 
It can be constructed as follows: "" -> "0" -> "01" -> "011". 
All binary strings from "000" to "111" are good strings in this example.


Input: low = 2, high = 3, zero = 1, one = 2
Output: 5
Explanation: The good strings are "00", "11", "000", "110", and "011".

*/




#include<bits/stdc++.h>
using namespace std;

int countGoodStrings(int low, int high, int zero, int one) {
        
        vector<int> result(high+1);
        for(int i=0;i<=high;i++)
            result[i] = 0;
        result[zero] += 1;
    result[one] += 1;
        for(int i=1;i<=high;i++){
            if((i-zero) >=0)
           result[i] = (result[i] + result[i-zero])%1000000007;
            if((i-one) >= 0)
           result[i] = (result[i] + result[i-one])%1000000007;
        }   
       int count=0;
       for(int i=low;i<=high;i++){
          count = (count + result[i])%1000000007;
       }
       return count;    
    }

int main(){
    int low , high , zero , one;
    cin>>low>>high>>zero>>one;
    cout<<countGoodStrings(low , high , zero , one)<<endl;
}
