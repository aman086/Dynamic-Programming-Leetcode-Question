/*

You are given an integer array nums. 
You want to maximize the number of points you get by performing the following operation any number of times:

Pick any nums[i] and delete it to earn nums[i] points. 
Afterwards, you must delete every element equal to nums[i] - 1 and every element equal to nums[i] + 1.
Return the maximum number of points you can earn by applying the above operation some number of times.


Input: nums = [3,4,2]
Output: 6
Explanation: You can perform the following operations:
- Delete 4 to earn 4 points. Consequently, 3 is also deleted. nums = [2].
- Delete 2 to earn 2 points. nums = [].
You earn a total of 6 points.



Input: nums = [2,2,3,3,3,4]
Output: 9
Explanation: You can perform the following operations:
- Delete a 3 to earn 3 points. All 2's and 4's are also deleted. nums = [3,3].
- Delete a 3 again to earn 3 points. nums = [3].
- Delete a 3 once more to earn 3 points. nums = [].
You earn a total of 9 points.


*/

#include<bits/stdc++.h>
using namespace std;
    
    int rob(vector<int>& nums) {
      int n = nums.size();
        vector<int> result(n);
     if(n==1)
        return nums[0];
    if(n==2)
        return max(nums[0] , nums[1]);
    result[0] = nums[0];
    result[1] = max(nums[0] , nums[1]);
    for(int i=2;i<n;i++){
        result[i] = result[i-2] + nums[i];
        result[i] = max(result[i] , result[i-1]);
    }
    return result[n-1];
    }
    
    
    
    
    
    int deleteAndEarn(vector<int>& nums) {

        int n = nums.size();
        sort(nums.begin() , nums.end());
        vector<int> result(20050 , 0);
        for(int i=0;i<n;i++){
            result[nums[i]]+= nums[i];    
        }
        return rob(result);
    }


int main(){
    int n;
    cin>>n;
    vector<int> arr(n);
    for(int i=0;i<n;i++)
        cin>>arr[i];
    cout << deleteAndEarn(arr);
}
